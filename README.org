:PROPERTIES:
:ID:       0eb86056-c8d7-4d60-9d87-c8246a7129dd
:END:

- [-] vanilla qc

  - [X] simple types

  - [X] immediates

  - [X] constant definition

  - [X] functions declaration

  - [X] comments

  - [X] function definitions

  - [X] statements

    - [X] assignment

    - [X] if

    - [X] while

    - [X] do/while

    - [X] sort out statement hierarchy (simple vs compound and what looks better in the
      CST)

    - [X] return statement

    - [X] variable definition statement

    - [X] expression statement

  - [X] expressions

    - [X] unary expression

    - [X] binary expressions

    - [X] funcall (or should it be an expression?)

    - [X] parentheses

  - [X] proper strings (escaped newline if necessary)

  - [X] variable definition

  - [X] fields

  - [X] frame function definitions (are declarations necessary here?)

  - [X] numeric: float: .123 (leading zero omitted)

    Also fix numeric and vector literals, while at it

  - [X] function definition with many anonymous args: void(string s, ...) bprint =
    #0:ex_bprint;

  - [X] wtf is this: #0:ex_walkpathtogoal; Immediate with a symbol?!

  - [X] modelgen pragmas (just get the pragma and it's args)

  - [X] start with setting up fields in the grammar

  - [-] test with original qc code: tree-sitter parse 'examples/**/*.qc' --quiet --stat

    - [X] 84% successful parsing achieved

    - [X] 96.9% parsed

    - [X] enums left but let's not do it at this time

    - [X] 98.67%

    - [ ] typedef

  - [ ] fix TODOs

- [ ] highlighting?

- [ ] tags?

- [-] check extensions in https://quakewiki.org/wiki/QuakeC_Loops_and_Conditions

  - [X] switch

  - [X] void somename(void) {} // C-style functions

  - [X] break

  - [X] enum

  - [X] preprocessor?

  - [X] for

  - [X] continue;

  - [ ] class?

- [ ] fteqcc dialect

  - [ ] further extensions in https://www.fteqcc.org/dl/fteqcc_manual.txt

  - [ ] preprocessor macros

- [ ] gmqcc

- [ ] extract and test code for 3-4 most popular extensions
