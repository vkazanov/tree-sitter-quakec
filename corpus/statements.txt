===========
Assignment statement
===========

void() Function = {
   ab = -1;
   b = -1.1;
   b11 = 101.1;
   c = d;
};

---

(source_file
    (function_definition
        (simple_type)
        (parameter_list)
        (identifier)
        (assignment_statement
           (identifier)
           (literal))
        (assignment_statement
           (identifier)
           (literal))
        (assignment_statement
           (identifier)
           (literal))
        (assignment_statement
           (identifier)
           (identifier))))

===========
If statement - simple statement guard
===========

void() Function = {
    if (a) b = 1;
};

---

(source_file
    (function_definition
        (simple_type)
        (parameter_list)
        (identifier)
        (if_statement
            (identifier)
            (assignment_statement
                (identifier)
                (literal)))))

===========
If statement - single compound statement guard
===========

void() Function = {
    if (a) {
        b = 1;
    };
};

---

(source_file
    (function_definition
        (simple_type)
        (parameter_list)
        (identifier)
        (if_statement
            (identifier)
            (assignment_statement
                (identifier)
                (literal)))))

===========
If statement - multiple compound statements guard
===========

void() Function = {
    if (a) {
        b = 1;
        ab = 33;
        abc = 444.1;
    };
};

---

(source_file
    (function_definition
        (simple_type)
        (parameter_list)
        (identifier)
        (if_statement
            (identifier)
            (assignment_statement
                (identifier)
                (literal))
            (assignment_statement
                (identifier)
                (literal))
            (assignment_statement
                (identifier)
                (literal)))))


===========
If statement - simple else
===========

void() Function = {
    if (a) b = 1 else b = 2;
};

---

(source_file
    (function_definition
        (simple_type)
        (parameter_list)
        (identifier)
        (if_statement
            (identifier)
            (assignment_statement
                (identifier)
                (literal))
            (assignment_statement
                (identifier)
                (literal)))))

===========
If statement - compound else
===========

void() Function = {
    if (a) b = 1
    else {
        b = 2;
    };
};

---

(source_file
    (function_definition
        (simple_type)
        (parameter_list)
        (identifier)
        (if_statement
            (identifier)
            (assignment_statement
                (identifier)
                (literal))
            (assignment_statement
                (identifier)
                (literal)))))

===========
While statement - simple
===========

void() Function = {
    while (a) b = 1;
};

---

(source_file
    (function_definition
        (simple_type)
        (parameter_list)
        (identifier)
        (while_statement
            (identifier)
            (assignment_statement
                (identifier)
                (literal)))))

===========
While statement - compound
===========

void() Function = {
    while (a) {
        b = 1;
        a = 22;
    };
};

---

(source_file
    (function_definition
        (simple_type)
        (parameter_list)
        (identifier)
        (while_statement
            (identifier)
            (assignment_statement
                (identifier)
                (literal))
            (assignment_statement
                (identifier)
                (literal)))))

===========
Do/while statement - simple
===========

void() Function = {
    do b = 1
    while (a);
};

---

(source_file
    (function_definition
        (simple_type)
        (parameter_list)
        (identifier)
        (do_while_statement
            (assignment_statement
                (identifier)
                (literal))
            (identifier))))

===========
Do/while statement - compound
===========

void() Function = {
    do {
        b = 1;
        a = 22;
    } while (a);
};

---

(source_file
    (function_definition
        (simple_type)
        (parameter_list)
        (identifier)
        (do_while_statement
            (assignment_statement
                (identifier)
                (literal))
            (assignment_statement
                (identifier)
                (literal))
            (identifier))))

===========
Return statement
===========

void() Function = {
    return 111;
};

---

(source_file
    (function_definition
        (simple_type)
        (parameter_list)
        (identifier)
        (return_statement
            (literal))))
